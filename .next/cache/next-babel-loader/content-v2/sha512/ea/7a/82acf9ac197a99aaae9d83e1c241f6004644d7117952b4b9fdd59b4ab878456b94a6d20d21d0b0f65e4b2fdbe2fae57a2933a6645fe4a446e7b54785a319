{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER-PC\\\\Desktop\\\\17 Next-js\\\\pages\\\\[meetupId]\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nvar dbId;\n\nfunction MeetupDetails(props) {\n  _s();\n\n  placeId = useRouter();\n  dbId = props.meetupData.id;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MeetupDetails, \"CeygcqajjFExIxFEzW4x/gfWEGQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/USER-PC/Desktop/17 Next-js/pages/[meetupId]/index.js"],"names":["MeetupDetail","Head","Fragment","useRouter","dbId","MeetupDetails","props","placeId","meetupData","id","title","image","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,IAAIC,IAAJ;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5BC,EAAAA,OAAO,GAAGJ,SAAS,EAAnB;AACAC,EAAAA,IAAI,GAAGE,KAAK,CAACE,UAAN,CAAiBC,EAAxB;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQH,KAAK,CAACE,UAAN,CAAiBE;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEJ,KAAK,CAACE,UAAN,CAAiBG,KAD1B;AAEE,MAAA,KAAK,EAAEL,KAAK,CAACE,UAAN,CAAiBE,KAF1B;AAGE,MAAA,OAAO,EAAEJ,KAAK,CAACE,UAAN,CAAiBI,OAH5B;AAIE,MAAA,WAAW,EAAEN,KAAK,CAACE,UAAN,CAAiBK;AAJhC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAhBQR,a;UACGF,S;;;KADHE,a;;AAiET,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport Head from \"next/head\";\r\nimport { Fragment } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nlet placeId;\r\nlet dbId;\r\nfunction MeetupDetails(props) {\r\n  placeId = useRouter();\r\n  dbId = props.meetupData.id;\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport function getStaticPaths() {\r\n  return {\r\n    fallback: false,\r\n    paths: [\r\n      {\r\n        params: {\r\n          meetupId: data.toString(),\r\n        },\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://UserNo1:88714659@atlascluster.ra9n7jk.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const data = await meetupsCollection\r\n    .find((i) => i._id.toString() === placeId)\r\n    .toArray();\r\n\r\n  console.log();\r\n\r\n  client.close(data);\r\n\r\n  // const meetupsdata = data\r\n  //   .filter((i) => i._id.toString() !== placeId)\r\n  //   .map((i) => ({\r\n  //     title: i.title,\r\n  //     image: i.image,\r\n  //     address: i.address,\r\n  //     description: i.description,\r\n  //     id: i._id.toString(),\r\n  //   }));\r\n  return {\r\n    props: {\r\n      meetups: data,\r\n    },\r\n    revalidate: 1, //? /////// if data changes frequently (we regenerate every 1 sec here)\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}